name: Release Banners

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g., v1.0.0)'
        required: false
      name:
        description: 'Release name'
        required: false

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/banner/requirements.txt

      - name: Generate Final Kit (light)
        shell: pwsh
        run: |
          python tools/banner/make_banner.py `
            --preset final_kit `
            --logo "assets/logo/wss_studio_art_logo.png" `
            --title "Conecta Libras" `
            --subtitle "Comunicação inclusiva sem barreiras" `
            --logo-scale 0.20 `
            --subtitle-gap 1.6 `
            --outdir outputs/Final `
            --zip

      - name: Generate Final Kit (dark)
        shell: pwsh
        run: |
          python tools/banner/make_banner.py `
            --preset final_kit `
            --logo "assets/logo/wss_studio_art_logo.png" `
            --title "Conecta Libras" `
            --subtitle "Comunicação inclusiva sem barreiras" `
            --logo-scale 0.20 `
            --subtitle-gap 1.6 `
            --dark `
            --outdir outputs/Final_Dark `
            --zip

      - name: Prepare release metadata
        id: meta
        shell: bash
        run: |
          TAG="${{ github.event.inputs.tag }}"
          NAME="${{ github.event.inputs.name }}"
          if [ -z "$TAG" ]; then TAG="v$(date +%Y%m%d%H%M%S)"; fi
          if [ -z "$NAME" ]; then NAME="Conecta Libras Banners $(date -u +%F %T UTC)"; fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          draft: false
          prerelease: false
          files: |
            outputs/Final/*.zip
            outputs/Final_Dark/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
